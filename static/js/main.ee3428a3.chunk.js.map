{"version":3,"sources":["components/info.js","components/form.js","components/weather.js","App.js","reportWebVitals.js","index.js"],"names":["Info","Form","props","onSubmit","countryMethod","type","name","placeholder","Weather","className","city","country","temp","pressure","sunset","humidity","error","API_KEY","App","state","undefined","gettingWeather","e","a","preventDefault","target","elements","value","fetch","api_url","json","data","sys","date","Date","setTime","sunset_date","getHours","getMinutes","getSeconds","setState","main","weatherMethod","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAQeA,EANF,kBACZ,8BACA,gDCKcC,EAPF,SAAAC,GAAK,OACjB,uBAAMC,SAAUD,EAAME,cAAtB,UACC,uBAAOC,KAAK,OAAOC,KAAK,UAAUC,YAAY,YAC9C,+CCYaC,EAfC,SAAAN,GAAK,OACrB,sBAAKO,UAAU,YAAf,UACGP,EAAMQ,MACN,gCACD,wCAAWR,EAAMQ,KAAjB,KAAyBR,EAAMS,WAC/B,8CAAiBT,EAAMU,QACvB,2CAAcV,EAAMW,YACpB,yCAAYX,EAAMY,UAClB,2CAAcZ,EAAMa,eAGrB,mBAAGN,UAAU,QAAb,SAAuBP,EAAMc,YCRxBC,EAAU,mCAiFDC,E,4MA7EbC,MAAQ,CACNP,UAAMQ,EACNV,UAAMU,EACNT,aAASS,EACTP,cAAUO,EACVN,YAAQM,EACRL,cAAUK,EACVJ,WAAOI,G,EAGTC,e,uCAAiB,WAAOC,GAAP,yBAAAC,EAAA,yDACfD,EAAEE,mBACEd,EAAOY,EAAEG,OAAOC,SAAShB,KAAKiB,OAFnB,iCAKSC,MAAM,qDAAD,OAAsDlB,EAAtD,kBAAoEO,EAApE,kBALd,cAKPY,EALO,gBAMMA,EAAQC,OANd,OAMPC,EANO,OAQTjB,EAASiB,EAAKC,IAAIlB,QAClBmB,EAAO,IAAIC,MACVC,QAAQrB,GACTsB,EAAcH,EAAKI,WAAa,IAAMJ,EAAKK,aAAe,IAAML,EAAKM,aAEzE,EAAKC,SAAS,CACZ5B,KAAMmB,EAAKU,KAAK7B,KAChBF,KAAKqB,EAAKzB,KACVK,QAAQoB,EAAKC,IAAIrB,QACjBE,SAASkB,EAAKU,KAAK5B,SACnBC,OAAOsB,EACPrB,SAASgB,EAAKU,KAAK1B,SAEnBC,WAAOI,IArBI,wBAwBb,EAAKoB,SAAS,CACZ5B,UAAMQ,EACNV,UAAMU,EACNT,aAASS,EACTP,cAAUO,EACVN,YAAQM,EACRL,cAAUK,EACVJ,MAAO,wBA/BI,4C,6GAqCf,OACE,qBAAKP,UAAU,UAAf,SACC,qBAAKA,UAAU,OAAf,SACC,sBAAKA,UAAU,YAAf,UAEI,qBAAKA,UAAU,OAAf,SACE,cAAC,EAAD,MAEF,sBAAKA,UAAU,OAAf,UACE,cAAC,EAAD,CAAMiC,cAAeC,KAAKtB,iBAC1B,cAAC,EAAD,CACET,KAAM+B,KAAKxB,MAAMP,KACjBF,KAAMiC,KAAKxB,MAAMT,KACjBC,QAASgC,KAAKxB,MAAMR,QACpBE,SAAU8B,KAAKxB,MAAMN,SACrBC,OAAQ6B,KAAKxB,MAAML,OACnBC,SAAU4B,KAAKxB,MAAMJ,SACrBC,MAAO2B,KAAKxB,MAAMH,sB,GAlEhB4B,IAAMC,WCKTC,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.ee3428a3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Info = () => (\r\n\t<div>\r\n\t<h2>Weather app</h2>\r\n\t</div>\r\n)\r\n\r\nexport default Info;","import React from \"react\";\r\n\r\nconst Form = props => (\r\n\t<form onSubmit={props.countryMethod}>\r\n\t\t<input type=\"text\" name=\"country\" placeholder=\"Country\"/>\r\n\t\t<button>Learn</button>\r\n\t</form>\r\n)\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nconst Weather = props => (\r\n<div className=\"infoWeath\">\r\n\t{ props.city &&\r\n\t  <div>\r\n\t\t<p>Place: {props.city}, {props.country}</p>\r\n\t\t<p>Temperature: {props.temp}</p>\r\n\t\t<p>Pressure: {props.pressure}</p>\r\n\t\t<p>Sunset: {props.sunset}</p>\r\n\t\t<p>Humidity: {props.humidity}</p>\r\n\t  </div>\r\n\t}\r\n\t<p className=\"error\">{ props.error }</p>\r\n\t</div>\r\n);\r\n\r\nexport default Weather;","import React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\n\nconst API_KEY = \"74e419c8f0bdc2acdc0658376ae8d3c4\";\n\nclass App extends React.Component {\n\n  state = {\n    temp: undefined,\n    city: undefined,\n    country: undefined,\n    pressure: undefined,\n    sunset: undefined,\n    humidity: undefined,\n    error: undefined\n  }\n\n  gettingWeather = async (e) => {\n    e.preventDefault();\n    var city = e.target.elements.city.value;\n    \n    if(city) {\n      const api_url = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n      const data = await api_url.json();\n\n      var sunset = data.sys.sunset;\n      var date = new Date();\n      date.setTime(sunset);\n      var sunset_date = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n\n      this.setState({\n        temp: data.main.temp,\n        city:data.name,\n        country:data.sys.country,\n        pressure:data.main.pressure,\n        sunset:sunset_date,\n        humidity:data.main.humidity,\n\n        error: undefined\n      });\n    } else {\n      this.setState({\n        temp: undefined,\n        city: undefined,\n        country: undefined,\n        pressure: undefined,\n        sunset: undefined,\n        humidity: undefined,\n        error: \"Enter the city name\"\n      });\n      }\n  }\n\n  render() {\n    return(\n      <div className=\"wrapper\">\n       <div className=\"main\">\n        <div className=\"container\">\n          \n            <div className=\"info\">\n              <Info />\n            </div>\n            <div className=\"form\">\n              <Form weatherMethod={this.gettingWeather} />\n              <Weather \n                temp={this.state.temp}\n                city={this.state.city}\n                country={this.state.country}\n                pressure={this.state.pressure}\n                sunset={this.state.sunset}\n                humidity={this.state.humidity}\n                error={this.state.error}\n              />\n            </div>\n          \n         </div>\n        </div>\n      \n      \n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css.map';\nimport './App.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}